{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sixt",
				"sixthScene_buses"
			],
			[
				"fift",
				"fifthScene_buses"
			],
			[
				"fourt",
				"fourthScene_buses"
			],
			[
				"secondScene",
				"secondScene_buses"
			],
			[
				"fir",
				"firstScene_buses"
			],
			[
				"time",
				"time_line〔argument〕"
			],
			[
				"tim",
				"timeline_all"
			],
			[
				"partstim",
				"parts_timeline"
			],
			[
				"new",
				"new_group"
			],
			[
				"group",
				"group_lines"
			],
			[
				"eleme",
				"element"
			],
			[
				"vectr",
				"vectors_layer"
			],
			[
				"parts",
				"parts_timeline"
			],
			[
				"ele",
				"elements"
			],
			[
				"path",
				"path_set"
			],
			[
				"sele",
				"selectAll"
			],
			[
				"pap",
				"paper_monostable〔variable〕"
			],
			[
				"no",
				"none"
			],
			[
				"dis",
				"display"
			],
			[
				"arg",
				"argument〔argument〕"
			],
			[
				"mono",
				"monostable"
			],
			[
				"tiem",
				"timeline_fives"
			],
			[
				"fun",
				"fun\tFunction"
			],
			[
				"Tim",
				"TimelineLite"
			],
			[
				"elem",
				"element〔argument〕"
			],
			[
				"label",
				"label_clone"
			],
			[
				"la",
				"label_clone"
			],
			[
				"is",
				"is_visible"
			],
			[
				"part",
				"parts_timeline"
			],
			[
				"colo",
				"color〔variable〕"
			],
			[
				"r1",
				"r1_r2"
			],
			[
				"var",
				"var_name〔variable〕"
			],
			[
				"va",
				"var_name"
			],
			[
				"vla",
				"vectors_layer"
			],
			[
				"r",
				"r1_label"
			],
			[
				"get",
				"get_from"
			],
			[
				"le",
				"length"
			],
			[
				"argumen",
				"argument.node"
			],
			[
				"pa",
				"pan_zoom_main"
			],
			[
				"geta",
				"get_animation_for_path"
			],
			[
				"Time",
				"TimelineMax"
			],
			[
				"tra",
				"translateY"
			],
			[
				"tranl",
				"translateX"
			],
			[
				"de",
				"decomposed_global_matrix"
			],
			[
				"ins",
				"instruction"
			],
			[
				"transf",
				"transform"
			],
			[
				"a",
				"argument"
			],
			[
				"n",
				"numbers"
			],
			[
				"folder",
				"folder_animation〔variable〕"
			],
			[
				"add",
				"addFolder"
			],
			[
				"junc",
				"junctions"
			],
			[
				"jun",
				"junctions"
			],
			[
				"flip",
				"flipflop_out"
			],
			[
				"color",
				"color_value〔variable〕"
			],
			[
				"si",
				"sixthScene"
			],
			[
				"ve",
				"vectors_layer"
			],
			[
				"getfor",
				"get_elements_form_ids〔function〕"
			],
			[
				"do_show",
				"do_show_element"
			],
			[
				"fi",
				"firstScene"
			],
			[
				"scen",
				"scenes"
			],
			[
				"scene",
				"scenes〔variable〕"
			],
			[
				"th",
				"thirdScene"
			],
			[
				"se",
				"secondScene"
			],
			[
				"op",
				"opAmp1"
			],
			[
				"elements",
				"elements_set"
			],
			[
				"pos",
				"posfix〔argument〕"
			],
			[
				"fu",
				"function"
			],
			[
				"tri",
				"trigger_label"
			],
			[
				"gnd",
				"gnd_pin"
			],
			[
				"gn",
				"gnd_bus"
			],
			[
				"r2",
				"r2_r3"
			],
			[
				"fil",
				"filter"
			],
			[
				"bus",
				"buses"
			],
			[
				"chi",
				"children"
			],
			[
				"resis",
				"resistance_ids〔variable〕"
			],
			[
				"sel",
				"select"
			],
			[
				"fol",
				"folder_obl〔variable〕"
			],
			[
				"di",
				"dif_o_b_l"
			],
			[
				"vector",
				"vectors_layer"
			],
			[
				"str",
				"stroke"
			],
			[
				"vec",
				"vectors_layer"
			],
			[
				"live",
				"livereloadhtml\tlivereloadhtml"
			],
			[
				"mid",
				"mid"
			],
			[
				"aud",
				"audio_visual_grid_0"
			],
			[
				"thres",
				"threshold1"
			],
			[
				"adda",
				"add_a_poly_NOT_USED〔function〕"
			],
			[
				"do",
				"do_impulse"
			],
			[
				"sc",
				"sc_centered_midi_center"
			],
			[
				"speed",
				"speed_z"
			],
			[
				"spee",
				"speed_z"
			],
			[
				"toggl",
				"toggle_background〔function〕"
			],
			[
				"scma",
				"sc_map_midi"
			],
			[
				"M",
				"MAX"
			],
			[
				"voronoi",
				"voronoi_mesh〔variable〕"
			],
			[
				"toggle",
				"toggle_visibility"
			],
			[
				"palette",
				"palette2"
			],
			[
				"for",
				"forEach"
			],
			[
				"speedz",
				"speed_z_size"
			],
			[
				"set",
				"setClearColor"
			],
			[
				"rende",
				"renderer〔variable〕"
			],
			[
				"ma",
				"material"
			],
			[
				"fr",
				"front_z"
			],
			[
				"inner",
				"innerWidth〔variable〕"
			],
			[
				"first",
				"first_grid_position_z"
			],
			[
				"req",
				"requestAnimationFrame"
			],
			[
				"render",
				"render_count〔variable〕"
			],
			[
				"grids",
				"grids_groups"
			],
			[
				"gr",
				"grids_groups"
			],
			[
				"grid",
				"grid_data"
			],
			[
				"smoo",
				"smoothness"
			],
			[
				"avera",
				"average"
			],
			[
				"smoot",
				"smoothed〔variable〕"
			],
			[
				"amo",
				"amount3〔variable〕"
			],
			[
				"amount",
				"amount3〔variable〕"
			],
			[
				"pall",
				"palette2〔variable〕"
			],
			[
				"sites",
				"sites_amount"
			],
			[
				"high",
				"high〔variable〕"
			],
			[
				"low",
				"low_amount〔variable〕"
			],
			[
				"lo",
				"low_index"
			],
			[
				"ver",
				"vertices"
			],
			[
				"re",
				"return"
			],
			[
				"pale",
				"palette〔variable〕"
			],
			[
				"ge",
				"geom"
			],
			[
				"Shape",
				"ShapeGeometry"
			],
			[
				"sha",
				"shape_geometry"
			],
			[
				"dim",
				"dim1〔variable〕"
			],
			[
				"fo",
				"for\tfor (…) {…} (Improved Native For-Loop)"
			],
			[
				"partic",
				"particle_g〔variable〕"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 816,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 262,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var gui;\nvar pan_zoom_main;\nvar palette = chroma.brewer.Set1;\nvar vectors_array;\nvar scenes;\nvar buses;\nvar image;\nvar is_image;\ndocument.body.style.backgroundColor = \"#222\";\ndocument.body.style.overflow = \"hidden\";\ndocument.body.style.fontFamily = \"monospace\";\ndocument.body.style.color = \"white\";\n// Snap.load()\nvar width;\nwidth  = innerWidth;\nwidth  = 800;\nvar height;\t\nheight = innerWidth;\nheight = 600;\nvar paper = Snap(width,height);\npaper.attr('id','paper');\nvar paper_svg = document.querySelector('svg');\npaper_svg.style.position = 'absolute';\npaper_svg.style.top      = '0px';\npaper_svg.style.left     = '0px';\nSnap.load(\"great scott 555.svg\",init)\nvar vectors_layer;\nfunction init(argument) {\n\tvar group_lines;\n\t// console.log(\"argument : \",argument);\n\t// var node = argument.node;\n\t// console.log(\"node : \",node);\n\t// document.body.appendChild(node);\n\t// var s = Snap(node);\n\t// paper.append(argument)\n\tvar fragment = paper.append(argument);\n\tgroup_lines = paper.g();\n\tfragment.node.style.backgroundColor = '#222';\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\tis_image = true;\n\tis_image = false;\n\timage = paper.select(\"#image\")\n\tif(!is_image&&image)image.attr(\"display\",\"none\");\n\t// console.log(\"children : \",children);\n\tvar main = paper.select(\"#great_scott_555\")\n\t// console.log(\"main : \",main);\n\tvar children = main.children();\n\tchildren.forEach(function (argument) {\n\t\t// console.log(\"argument : \",argument);\n\t\t// body...\n\t})\n\tvectors_layer = main.select(\"#vectors\");\n\n\t// vectors_layer.drag();\n\t// vectors_layer.attr('stroke','none');\n\t// vectors_layer.attr('fill','none');\n\n\tvar ided = vectors_layer.selectAll(\"[id]\");\n\t// var first_level = vectors_layer.selectAll(\"*\");\n\t// console.log(\"first_level : \",first_level);\n\t// console.log(\"ided : \",ided.length);\n\t// console.log(\"ided : \",ided);\n\t// console.log(\"vectors_layer : \",vectors_layer);\n\tvar vectors = vectors_layer.children();\n\t// console.log(\"vectors : \",vectors.length);\n\t// _.filter(vectors_layer,)\n\tvar nulled=[];\n\tvar children=[];\n\tided.forEach(function (argument) {\n\t\t// console.log(\"argument : \",argument);\n\t\tvar id = argument.attr('id');\n\t\tvar node = argument.node;\n\t\t// console.log(\"id : \",id);\t\tconsole.log(\"node : \",node);\n\t\tif(id){\n\t\t\t// console.log(\"id : \",id);\n\t\t\tchildren.push(argument);\n\t\t\t// console.log('---------------');\n\t\t\tif(argument.type==='g'){\n\t\t\t\targument.children().forEach(function (child) {\n\t\t\t\t\t// console.log(\"child : \",child);\n\t\t\t\t\t// child.attr('stroke','white');\n\t\t\t\t\t// console.log(\"child : \",child.type);\n\t\t\t\t\t// if(child.type!=='path' && child.attr &&child.attr('stroke'))child.attr('stroke','white');\n\t\t\t\t})\n\t\t\t}\n\t\t}else{\n\t\t\tnulled.push(argument);\n\t\t}\n\t})\n\t// console.log(\"nulled : \",nulled);\n\t/*\n\tvar vectors_layer_clone = vectors_layer.clone();\n\tconsole.log(\"vectors_layer_clone : \",vectors_layer_clone);\n\tvectors_layer_clone.attr('transform','translate(10,0)')\n\tvectors_layer_clone.attr('transform','scale(1.5,1.5)');\n\tvectors_layer_clone.drag();\n\t*/\n\t// paper.drag();\n\tvectors_array = _.filter(ided,function (argument) {\n\t\treturn argument.type!=='tspan';\n\t})\n\t// console.log(\"vectors_array : \",vectors_array.length);\n\t// console.log(\"vectors_array : \",vectors_array);\n\tgui = new dat.GUI();\n\t// console.log(\"gui : \",gui);\n\tgui.add(this,'toggle_image')\n\t// gui.close();\n\t// paper.prepend(group_lines);\n\t// group_lines.drag();\n\tvar paper_id = paper.attr('id');\n\t// console.log(\"paper_id : \",paper_id);\n\n\tdraw_color(vectors_array,'white');\n\tvar parts_timeline = new TimelineMax();\n\t// set_animation(group_lines,parts_timeline,vectors_array);\n\t/*\n\tvar folder_all = gui.addFolder(\"all\");\n\tadd_gui();\n\tfunction add_gui() {\n\t\tvectors_array.forEach(function (element,j) {\n\t\t\tfolder_all.add({f: (x)=> {\n\t\t\t\tvar id = element.attr('id');\n\t\t\t\tconsole.log(\"id : \",id);\n\t\t\t\tvar element_ = vectors_layer.select('#'+id);\n\t\t\t\tconsole.log(\"element_ : \",element_);\n\t\t\t\telement_.attr('strokeWidth','10px');\n\t\t\t}},'f').name(element.attr('id'));\n\t\t})\n\t}\n\t*/\n\tvar by_type = _.groupBy(vectors_array,function (e,i,a) {\n\t\t// console.log(\"e : \",e);\n\t\t// console.log(\"i : \",i);\n\t\treturn e.type; \n\t});\n\t//To see if there are repeated ids\n\tvar by_id = _.groupBy(vectors_array,function (e) {\n\t\treturn e.attr('id');\n\t})\n\tvar histogram = _.map(by_id,function (argument) {\n\t\treturn _.size(argument);\n\t})\n\t// console.log(\"histogram : \",histogram);\n\tvar keys = Object.keys(by_type);\n\t// console.log(\"by_type : \",by_type);\n\t// console.log(\"keys : \",keys);\n\tbuses = vectors_layer.selectAll(\".bus\");\n\t// console.log(\"buses : \",buses);\n\t// buses.attr('stroke','red')\n\tbuses.forEach(function (bus) {\n\t\t// bus.attr('stroke','red');\n\t\t// bus.attr('strokeWidth','s');\n\t})\n\tvar junctions = vectors_layer.selectAll(\".junction\");\n\tjunctions.forEach(function (junction) {\n\t\t// junction.attr('fill','green');\n\t\t// junction.attr('stroke','none');\n\t\t// var type = junction.type;\n\t\t// console.log(\"type : \",type);\n\t\t// junction.attr('r',8);\n\t})\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\t/////////////////////////////////////////////////\n\tvar guides = vectors_layer.selectAll('[id^=guide]')\n\t// console.log(\"guides : \",guides);\n\tvar resistances = vectors_layer.selectAll('[id^=r]');\n\t// console.log(\"resistances : \",resistances);\n\tvar resistances_ids = _.map(resistances,function (argument) {\n\t\treturn argument.attr('id');\n\t})\n\tvar labels;\n\tlabels = vectors_layer.selectAll(\"[id~=label]\");\n\t// console.log(\"labels_idss : \",labels);\n\tlabels = vectors_layer.selectAll(\"[id|=label]\");\n\t// console.log(\"labels : \",labels);\n\tlabels = vectors_layer.selectAll(\"[id*=label]\");\n\t// console.log(\"labels : \",labels);\n\tvar guides_ids = _.map(guides,function (argument) {\n\t\targument.attr('display','none')\n\t\treturn argument.attr('id');\n\t})\n\t// console.log(\"guides_ids : \",guides_ids);\n\tvar labels_ids = _.map(labels,function (argument) {\n\t\treturn argument.attr('id');\n\t})\n\t// console.log(\"labels_ids : \",labels_ids);\n\tvar buses_ids = _.map(buses,function (argument) {\n\t\treturn argument.attr('id');\n\t})\n\t// console.log(\"buses_ids : \",buses_ids);\n\tvar dif_r_b_l = _.difference(resistances_ids,buses_ids,labels_ids);\n\t// console.log(\"dif_r_b_l : \",dif_r_b_l);\n\tresistances_ids = dif_r_b_l;\n\tvar opAmps = vectors_layer.selectAll(\"[id^=opAmp]\");\n\tvar opAmps_ids = _.map(opAmps,function (argument) {\n\t\treturn argument.attr('id');\n\t})\n\tvar junctions = vectors_layer.selectAll('.junction')\n\t// console.log(\"junctions : \",junctions);\n\tvar junctions_ids = _.map(junctions,function (argument) {\n\t\treturn argument.attr('id');\t\n\t})\n\t// console.log(\"junctions_ids : \",junctions_ids);\n\n\topAmps_ids = _.difference(opAmps_ids,buses_ids,labels_ids,junctions_ids);\n\t// console.log(\"opAmps_ids : \",opAmps_ids);\n\tvar folder_obl = gui.addFolder('obl');\n\t// folder_obl.open();\n\topAmps_ids.forEach(function (argument) {\n\t\tfolder_obl.add({f:() => {\n\t\t\tconsole.log(\"argument : \",argument);\n\t\t\tvar element_ = vectors_layer.select(\"#\"+argument);\n\t\t\tconsole.log(\"element_ : \",element_);\n\t\t\tconsole.log(\"element_ : \",element_.type);\n\t\t\telement_.attr('transform','scale(3,3)');\n\t\t}},'f').name(argument);\n\t})\n\t// console.log(\"resistances_ids : \",resistances_ids);\n\t// console.log(\"opAmps_ids : \",opAmps_ids);\n\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar frame = vectors_layer.select('#frame');\n\tvar title = vectors_layer.select('#title');\n\t// console.log(\"frame : \",frame);\n\tresistances = get_elements_from_ids(resistances_ids);\n\topAmps = get_elements_from_ids(opAmps_ids);\n\tdo_hide_all();\n\tgui.add(this,'do_hide_all')\n\tgui.add(this,'do_show_all')\n\tr1_r2 = get_bus('r1-r2');\n\tvar gnd_bus = get_bus('gnd');\n\tvar vcc_bus = get_bus('vcc');\n\t// console.log(\"gnd_bus : \",gnd_bus);\n\t// console.log(\"r1_r2 : \",r1_r2);\n\tvar pins_label = vectors_layer.selectAll(\"[id*=pin_label]\");\n\tvar pins_labels_ids = _.map(pins_label,function (argument) {\n\t\treturn argument.attr('id');\t\n\t})\n\tvar introScene =[];\n\tgui.add({f:function () {\n\t\tdo_hide_all();\n\t}},'f').name('hide all');\n\n\tintroScene.push(frame);\n\tintroScene.push(title);\n\t// frame.attr('display','inline');\n\t// title.attr('display','inline');\n\tvar r1_r2 = select_one(\"r1-r2\")\n\tvar r2_r3 = select_one(\"r2-r3\")\n\t// console.log(\"r2_r3 : \",r2_r3);\n\t// console.log(\"pins_labels_ids : \",pins_labels_ids);\n\tvar vcc_pin_label = get_from('vcc',pins_label)\n\tvar gnd_pin_label = get_from('gnd',pins_label)\n\tvar pins = vectors_layer.selectAll(\"[id^=pin]\")\n\tpins.forEach(function (argument) {\n\t\tintroScene.push(argument);\n\t})\n\t\n\tvar r1_label     = get_from('r1',labels);\n\t// console.log(\"r1_label : \",r1_label);\n\tfunction do_update_inkscape_text_element(element,new_content) {\n\t\tvar text_span = element.select('tspan');\n\t\ttext_span.node.innerHTML = new_content;\n\t}\n\tvar label_clones=[];\n\tfunction do_clone_resistance_labels(element) {\n\t\tvar element_clone = element.clone()\n\t\tdo_update_inkscape_text_element(element_clone,\"5\");\n\t\tlabel_clones.push(element_clone)\n\t\tvectors_layer.append(element_clone);\n\t\treturn element_clone\n\t}\n\t// var a = Snap(r1_element_clone.node.innerHTML)\n\t// console.log(\"a : \",a);\n\n\tvar r2_label     = get_from('r2',labels);\n\tvar r3_label     = get_from('r3',labels);\n\tvar fives = [r1_label,r2_label,r3_label].map(function function_name(argument) {\n\t\treturn do_clone_resistance_labels(argument);\n\t})\n\tvar timeline_fives_time = 0.5;\n\tvar timeline_fives = new TimelineLite();\n\tfives.forEach(function (element) {\n\t\telement.attr('stroke','white');\n\t\t// console.log(\"element : \",element.attr('y'));\n\t\tvar tweened = {y:element.attr('y')}\n\t\ttimeline_fives.add(TweenMax.to(element.node,timeline_fives_time,{y:-50,\n\t\t\tonUpdate:(argument)=> {\n\t\t\t\t// console.log(\"argument : \",argument);\n\t\t\t\targument.attr('y',tweened.y);\n\t\t\t\t// console.log(\"tweened : \",tweened);\n\t\t\t},\n\t\t\tonUpdateParams:[element],\n\t\t\tonComplete:(argument)=> {\n\t\t\tvar id = element.attr('id;');\n\t\t\tvar s = id+ ' '+element.attr('y');\n\t\t\t// console.log(\"s : \",s);\n\t\t\t}\n\t\t}))\n\n\t})\n\tvar targets = [0,0,0].map(function (argument) {\n\t\treturn 200\n\t})\n\ttargets=targets.map(function (argument,i) {\n\t\treturn argument + i*20;\n\t})\n\ttargets = [70,-10,-90];\n\tfives.forEach(function (element,i) {\n\t\t\tvar xt = targets[i]\n\t\t\t// console.log(\"xt : \",xt);\n\t\ttimeline_fives.add(TweenMax.to(element.node,timeline_fives_time,{x:xt}))\n\t})\n\t// do_clone_resistance_labels(r1_label);\n\t// do_clone_resistance_labels(r2_label);\n\t// do_clone_resistance_labels(r3_label);\n\tvar label_a      = get_from('label_a',labels);\n\tvar vd1_junction = get_from('vd1',junctions);\n\tvar vd2_junction = get_from('vd2',junctions);\n\tvar vcc_pin      = get_from('vcc',pins);\n\tvar gnd_pin      = get_from('gnd',pins);\n\tvar firstScene=[\n\t\t// r1_r2,\n\t\t// r2_r3,\n\t\t// gnd_bus,\n\t\t// vcc_bus,\n\t\t// vcc_pin_label,\n\t\t// gnd_pin_label,\n\t\tr1_label,\n\t\tr2_label,\n\t\tr3_label,\n\t\tvd1_junction,\n\t\tvd2_junction,\n\t\t// vcc_pin,\n\t\t// gnd_pin,\n\t]\n\tfirstScene= firstScene.concat(resistances);\n\tfirstScene= firstScene.concat(label_a);\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar introScene_buses=[]\n\tvar secondScene_buses=[]\n\tvar thirdScene_buses=[]\n\tvar fourthScene_buses=[]\n\tvar fifthScene_buses=[]\n\tvar sixthScene_buses=[]\n\tvar firstScene_buses=[\n\t\tr1_r2,\n\t\tr2_r3,\n\t\tgnd_bus,\n\t\tvcc_bus,\n\t\t// vcc_pin_label,\n\t\t// gnd_pin_label,\n\t\t// r1_label,\n\t\t// r2_label,\n\t\t// r3_label,\n\t\t// vd1_junction,\n\t\t// vd2_junction,\n\t\t// vcc_pin,\n\t\t// gnd_pin,\n\t]\n\t\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar trigger_label = get_from('trigger',labels);\n\tvar secondScene = [\n\t];\n\tvar trigger_label                   = add_to_scene('trigger',labels,secondScene) \n\tvar flipflop_set_label              = add_to_scene('flipflop_set',labels,secondScene);\n\tvar flipflop_out_label              = add_to_scene('flipflop_out',labels,secondScene);\n\t// console.log(\"trigger_label : \",trigger_label);\n\tvar opAmp1                          = add_to_scene('opAmp1',opAmps,secondScene) \n\t// var opAmp1_bus                   = add_to_scene('opAmp1',buses,secondScene) \n\t// var opAmp1_bus                   = add_to_scene('opAmp1',buses,secondScene) \n\t// var flipflop_label               = add_to_scene('flipflop',labels,secondScene) \n\tvar flipflop_label                  = add_one_to_scene(\"flipflop_label\",secondScene);\n\t// console.log(\"flipflop_label : \",flipflop_label);\n\t// var flipflop_label               = get_from\t(\"flipflop\",labels);\n\t// var flipflop_out_junction           = get_from('flipflop_out',junctions);\n\tvar flipflop_out_junction           = add_to_scene('flipflop_out', junctions, secondScene);\n\tvar vd1_label_b                     = add_one_to_scene(\"vd1_label_b\",secondScene);\n\tvar flipflop                        = add_one_to_scene(\"flipflop\",secondScene);\n\tvar output_driver                   = add_one_to_scene(\"output_driver\",secondScene);\n\tvar opAmp1_inverting_minus_label    = add_one_to_scene(\"opAmp1_inverting_minus_label\",secondScene);\n\tvar opAmp1_input_plus_label         = add_one_to_scene(\"opAmp1_input_plus_label\",secondScene);\n\t/////////////////buses/////////////////////////////////////\n\tvar opAmp1_inverting                = add_one_to_scene(\"opAmp1_inverting\",secondScene_buses);\n\tvar opAmp1_input_vd1                = add_one_to_scene(\"opAmp1_input-vd1\",secondScene_buses);\n\tvar opAmp1_output_flipflop_set      = add_one_to_scene(\"opAmp1_output-flipflop_set\",secondScene_buses);\n\tvar flipflop_out_output_driver_in   = add_one_to_scene(\"flipflop_out-output_driver_in\",secondScene_buses);\n\tvar output_driver_output            = add_one_to_scene(\"output_driver-output\",secondScene_buses);\n\t// console.log(\"opAmp1_bus : \",opAmp1_bus);\n\t// console.log(\"trigger_label : \",trigger_label);\n\t// secondScene= secondScene.concat(resistances);\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar thirdScene = [];\n\tvar reset_label                     = add_to_scene('reset',labels,thirdScene) \n\tvar output_label                    = add_to_scene('output',labels,thirdScene) \n\tvar flipflop_reset_junction         = add_to_scene('flipflop_reset', junctions, thirdScene);\n\t/////////////////buses/////////////////////////////////////\n\tvar flipflop_reset_reset            = add_one_to_scene(\"flipflop_reset-reset\",thirdScene_buses);\n\n\n\tvar fourthScene = [];\n\tvar opAmp2                          = add_to_scene('opAmp2',                       opAmps, fourthScene);\n\tvar cv_label                        = add_to_scene('cv',                           labels, fourthScene);\n\tvar threshold_label                 = add_to_scene('threshold',                    labels, fourthScene);\n\tvar opAmp2_inverting_minus_label    = add_to_scene('opAmp2_inverting_minus_label', labels, fourthScene);\n\tvar vd2_label_b_label               = add_to_scene('vd2_label_b',                  labels, fourthScene);\n\tvar opAmp2_cv                       = add_to_scene('opAmp2-cv',                    buses,  fourthScene_buses);\n\t\n\tvar fifthScene = [];\n\tvar opAmpInput_bus                  = add_to_scene('opAmpInput',                   buses,  fifthScene);\n\tvar opAmp2Output_bus                = add_to_scene('opAmp2Output',                 buses,  fifthScene);\n\tvar opAmp2_input_plus_label         = add_to_scene('opAmp2_input_plus',            labels, fifthScene);\n\n\tvar sixthScene = [];\n\t// var opAmpInput_bus               = add_to_scene('opAmpInput',                   buses,  sixthScene);\n\tvar opAmp2_inverting_vd2            = add_to_scene('opAmp2_inverting-vd2',           buses,         sixthScene_buses);\n\tvar opAmp2_junction                 = add_to_scene('opAmp2',                         junctions,     sixthScene);\n\tvar transistor_collector_discharge  = add_to_scene('transistor_collector-discharge', buses,         sixthScene_buses);\n\tvar transistor_base_flipflop_out    = add_to_scene('transistor_base-flipflop_out',   buses,         sixthScene_buses);\n\tvar transistor_emitter_gnd          = add_to_scene('transistor_emitter-gnd',         buses,         sixthScene_buses);\n\tvar discharge_label                 = add_to_scene('discharge',                      labels,        sixthScene);\n\tvar transistor                      = add_one_to_scene('transistor',                 sixthScene);\n\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tfunction do_show_all(argument) {\n\t\tdo_show(introScene);\n\t\tdo_show(firstScene);\n\t\tdo_show(secondScene);\n\t\tdo_show(thirdScene);\n\t\tdo_show(fourthScene);\n\t\tdo_show(fifthScene);\n\t\tdo_show(sixthScene);\n\t}\n\t// do_show_all();\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tscenes={introScene,firstScene,secondScene,thirdScene,fourthScene,fifthScene,sixthScene};\n\tvar scenes_buses = {introScene_buses,firstScene_buses,secondScene_buses,thirdScene_buses,fourthScene_buses,fifthScene_buses,sixthScene_buses};\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t// set_timeline_parts_NOT_USED(group_lines); \n\tfunction set_timeline_parts_NOT_USED(group) {\n\t\tvar timeline_max = new TimelineMax({onStart:function (argument) {\n\t\t\t// body...\n\t\t\tvar children = group.children();\n\t\t\tchildren.forEach(function (argument) {\n\t\t\t\tvar x1 = argument.attr('x1')\n\t\t\t\tvar y1 = argument.attr('y1')\n\t\t\t\tvar x2 = argument.attr('x2',x1)\n\t\t\t\tvar x2 = argument.attr('y2',y1)\n\t\t\t})\n\t\t}});\n\t\t// group_lines.node.innerHTML = '';\n\t\t_.each(scenes,function (e,i,a) {timeline_max.add(do_animation_scene(a,group_lines,i));})\n\t\tadd_timeline_gui(timeline_max);\n\t}\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar folder_scenes = gui.addFolder('Scenes');\n\t// folder_scenes.open();\n\t_.each(scenes,function (e,i,a) {\n\t\tvar timeline_all_scene = new TimelineMax();\n\t\tfolder_scenes.add({f: ()=> {\n\t\t\ttimeline_all_scene.add(do_enter(i));\n\t\t\ttimeline_all_scene.add(do_animation_scene(scenes_buses,group_lines,i+\"_buses\"))\n\t\t}},'f').name(i);\n\t})\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tvar folder_scenes2 = gui.addFolder('Scenes; busese');\n\t_.each(scenes_buses,function (e,i,a) {\n\t\tfolder_scenes2.add({f: ()=> {\n\t\t\tdo_animation_scene(scenes_buses,group_lines,i)\n\t\t}},'f').name(i);\n\t})\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tfunction set_timeline_NOT_USED(group) {\n\t\tvar timeline_max = new TimelineMax({paused:true,onRepeat:(argument) =>{\n\t\t\tgroup\n\t\t}});\n\n\t\tconsole.log(\"timeline_max : \",timeline_max);\n\t\t_.each(scenes,function (e,i,a) {\n\t\t\tvar timeline = new TimelineLite({onUpdate:updateSlider});\n\t\t\t// var timeline = new TimelineLite(\t);\n\t\t\te.forEach(function (element) {\n\t\t\t\ttimeline.add(TweenMax.from(element.node,0.1,{scaleX:0,scaleY:0}))\n\t\t\t})\n\t\t\ttimeline_max.add(timeline)\n\n\t\t})\n\t\tadd_timeline_gui(timeline_max);\n\t}\n\tfunction add_timeline_gui(time_line) {\n\t\t\n\t\tconsole.log(\"time_line : \",time_line);\n\t\tvar folder_animation = gui.addFolder('animation');\n\t\tfolder_animation.open();\n\t\tfolder_animation.add(time_line,'play')\n\t\tfolder_animation.add(time_line,'stop')\n\t\tfolder_animation.add(time_line,'resume')\n\t\tfolder_animation.add(time_line,'pause')\n\t\tfolder_animation.add(time_line,'repeat')\n\t\tfolder_animation.add(time_line,'reverse');\n\t\tfolder_animation.add(time_line,'restart');\n\t\t// folder_animation.add(time_line,'progress');\n\t\tvar progress = {value:0}\n\t\tvar slider = folder_animation.add(progress,'value',0,1)\n\t\tslider.step(0.01);\n\t\tslider.listen();\n\t\tslider.onChange(function (argument) {\n\t\t    // console.log(\"argument : \",argument);\n\t\t    time_line.pause();\n\t\t    time_line.progress(argument);\n\n\t\t})\n\t\tfunction updateSlider() {\n\t\t\tslider.updateValue\n\t\t\t// console.log(Math.random());\n\t\t\t// slider.setValue(time_line.progress());\n\t\t}    \t\t\n\n\t}\n\t// folder_animation.add(timeline_max,'group_lines').listen();\n\n\t\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\t///////////////////////////////////\n\tfunction start_animation_NOT_USED(argument) {\n\t\t// body...\n\t\tvar ti = Date.now();\n\t\tvar t0 = 0;\n\t\t\tsetInterval(function (argument) {\n\t\t\t\t// do_show(scenes[])\n\t\t\t\tvar t1 = Date.now();\n\t\t\t\tvar t = t1-ti;\n\t\t\t\tt*=0.001;\n\t\t\t\tt|=0;\n\t\t\t\tt0=t1;\n\t\t\t\t// console.log(\"t : \",t);\n\t\t\t\t// console.log(\"t0 : \",t0);\n\t\t\t})\n\t}\n\t// debugger\n\t// pan_zoom_main = svgPanZoom(paper.node,{zoomScaleSensitivity:0.6,minZoom: 0.1});\n\t// pan_zoom_main.fit();\n\t// pan_zoom_main.center();\n\t// pan_zoom_main.zoom(0.68);\n\t// pan_zoom_main.pan({x:-133,y:-56});\n\tgui.add({f:function () {\n\t\tvar z = pan_zoom_main.getZoom();\n\t\tconsole.log(\"z : \",z);\n\t\tvar p = pan_zoom_main.getPan();\n\t\tconsole.log(\"p : \",p);\n\t\t/*\n\t\tz :  0.684890627861023\n\t\tindex.js:515 p :  Object {x: -133.86022434791502, y: -56.25715012150465}\n\t\t */\n\t}},'f').name('pan xoom');\n}\n///////////////////////////////////\n///////////////////////////////////\n/////////// functions /////////////\n///////////////////////////////////\n///////////////////////////////////\nfunction add_one_to_scene(argument,scene) {\n\tvar output = select_one(argument);\n\tscene.push(output);\n\treturn output;\n}\nfunction do_show(elements) {\n\telements.forEach(function (element) {\n\t\tdo_show_element(element);\n\t})\n}\nfunction do_show_element(element) {\n\telement.attr('display','inline');\n}\nfunction select_one(argument) {\n\treturn vectors_layer.select(\"#\"+argument)\n}\nfunction get_bus(argument) {\n\tvar output = _.filter(buses,(bus)=> {\n\t\tvar id = bus.attr('id')\n\t\treturn id===argument\n\t})\n\tif(output.length>1){\n\t\tthrow output;\n\t}\n\tif(output.length===0){\n\t\tthrow output;\n\t}\n\treturn output[0];\n}\nfunction add_to_scene(argument,elements_set,scene) {\n\tvar output = get_from(argument,elements_set)\n\tif (output.length>1){\n\t\toutput.forEach((aelement)=>{\n\t\t\tscene.push(aelement)\n\t\t})\n\t}\n\telse \n\tscene.push(output);\n\treturn output;\t\t\t\n}\nfunction get_from(id,elements) {\n\tvar output = _.filter(elements,(element)=> {\n\t\tvar id_ = element.attr('id')\n\t\treturn id_.indexOf(id)>-1\n\t})\n\tif(output.length>1){\n\t\treturn output;\n\t}\n\tif(output.length===0){\n\t\tthrow output;\n\t}\n\treturn output[0];\n}\nfunction get_elements_from_ids(ids_array) {\n\treturn ids_array.map(function (argument) {\n\t\treturn vectors_layer.select(\"#\"+argument)\n\t})\n}\nfunction toggle_image(argument) {\n\tconsole.log('.........................');\n\tis_image=!is_image;\n\tvar display_value;\n\tvar color_value;\n\tif(!is_image){\n\t\tdisplay_value = 'none';\n\t\tcolor_value= 'white';\n\t}\n\telse{\n\t\tdisplay_value = 'inline';\n\t\tcolor_value= 'black';\n\t}\n\timage.attr(\"display\",display_value);\n\tvectors_array.forEach(function (element) {\n\t\tif(!is_image){\n\t\t\t\t\n\t\t\tif(element.type!=='text')element.attr('stroke',color_value);\n\t\t\tif(element.type==='text')element.attr('fill',color_value);\n\t\t\t// if(element.type==='path')element.attr('stroke',color_value);\n\t\t}else{\n\t\t\tif(element.type==='text')element.attr('stroke','none');\n\n\t\t}\n\t})\n}\n// getPoints\n// toPath\nfunction deltaTransformPoint(matrix, point)  {\n\n    var dx = point.x * matrix.a + point.y * matrix.c + 0;\n    var dy = point.x * matrix.b + point.y * matrix.d + 0;\n    return { x: dx, y: dy };\n}\nfunction decomposeMatrix(matrix) {\n\n    // @see https://gist.github.com/2052247\n\n    // calculate delta transform point\n    var px = deltaTransformPoint(matrix, { x: 0, y: 1 });\n    var py = deltaTransformPoint(matrix, { x: 1, y: 0 });\n\n    // calculate skew\n    var skewX = ((180 / Math.PI) * Math.atan2(px.y, px.x) - 90);\n    var skewY = ((180 / Math.PI) * Math.atan2(py.y, py.x));\n\n    return {\n\n        translateX: matrix.e,\n        translateY: matrix.f,\n        scaleX: Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n        scaleY: Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n        skewX: skewX,\n        skewY: skewY,\n        rotation: skewX // rotation is the same as skew x\n    };        \n}\nfunction get_animation_for_path_of_lines(group,element,color,duration,speed) {\n\tvar timeline = new TimelineMax();\n\tif(element.type==='path'){\n\t\tvar d = element.attr('d');\n\t\t// var id = element.attr('id');\n\t\tvar abs = Snap.path.toAbsolute(d);\n\t\tvar transform = element.attr('transform');\n\t\tif(transform.string){\n\t\t\t// console.log('----');\n\t\t\tabs= Snap.path.map(abs,transform.globalMatrix)\n\t\t}\n\n\t\tabs.forEach( (argument,i)=> {\n\t\t\tvar x = argument[1]\n\t\t\tvar y = argument[2]\n\t\t\tvar instruction = argument[0];\n\t\t\tif(i===0)return\n\t\t\t////////////////\n\t\t\t/*\n\t\t\tvar circle = group.circle(x,y,1);\n\t\t\tcircle.attr('fill',color);\n\t\t\tcircle.attr('stroke','none');\n\t\t\t*/\n\t\t\tvar prev = abs[i-1];\n\t\t\tvar px = prev[1];\n\t\t\tvar py = prev[2];\n\t\t\tif(instruction===\"Z\"){\n\t\t\t\tx  = abs[0][1];\n\t\t\t\ty  = abs[0][2];\n\t\t\t\tpx = abs[abs.length-2][1];\n\t\t\t\tpy = abs[abs.length-2][2];\n\t\t\t}\n\t\t\tvar line = group.line(px,py,px,py);\n\t\t\tline.attr('stroke',color);\n\t\t\tvar x1=px;\n\t\t\tvar y1=py;\n\t\t\tvar tweened = {x:x1,y:y1};\n\t\t\t// return;\n\t\t\ttimeline.to(tweened,duration,{x:x,y:y,onUpdate: (argument)=> {\n\t\t\t\tline.attr('x1',x1);\n\t\t\t\tline.attr('y1',y1);\n\t\t\t\tline.attr('x2',tweened.x);\n\t\t\t\tline.attr('y2',tweened.y);\n\t\t\t}})\n\t\t})\n\t}\n\treturn timeline\n}\nfunction do_hide_all() {\n\tdo_visibility(false);\n}\nfunction do_show_all() {\n\tdo_visibility(true);\n}\nfunction do_visibility(is_visible) {\n\tvectors_layer.children().forEach(function (argument) {\n\t\ttry{\n\t\t\targument.attr('display',is_visible?'inline':'none');\n\t\t}catch(e){\n\t\t}\n\t})\n}\nfunction do_visibility_g(elements,is_visible) {\n\telements.children().forEach(function (element) {\n\t\ttry{\n\t\t\telement.attr('display',is_visible?'inline':'none');\n\t\t}catch(e){\n\t\t}\n\t})\n}\n\n/*\nhttp://stackoverflow.com/questions/9153598/how-do-i-fetch-a-branch-on-someone-elses-fork-on-github\n */\n// Snap.load('data/svg/monostable.svg',monostable);\nvar paper_monostable = Snap(1000,1000);\nfunction monostable(fragment) {\n\t// console.log(\"fragment : \",fragment);\n\tvar main_element = paper_monostable.append(fragment)\n\t// console.log(\"main_element : \",main_element);\n\tpaper.transform('t-10000,0');\n\t// console.log(\"paper : \",paper);\n\t// paper.attr('display','none');\n\tvar layers = paper_monostable.selectAll('[inkscape\\\\:label]')\n\t// console.log(\"layers : \",layers);\n\tlayers.forEach(function (layer) {\n\t\t// console.log(\"layer : \",layer);\n\t\tvar id = layer.attr('id')\n\t\t// console.log(\"id : \",id);\n\t\t// body...\n\t})\n\tpaper_monostable.select('#image').attr('display','none');\n\tvar path_set = paper_monostable.selectAll('path,rect,text');\n\tdraw_color(path_set,'white')\n\t// console.log(\"path_set : \",path_set);\n\tvar parts_timeline = new TimelineMax();\n\tvar group_for_animation = paper_monostable.group();\n\t// set_animation(group_for_animation,parts_timeline,path_set);\n}\nfunction draw_color(elements_array,color) {\n\telements_array.forEach(function (element,j) {\n\t\tif(!is_image){\n\t\t\t\t\n\t\t\tif(element.type!=='text')element.attr('stroke',color);\n\t\t\tif(element.type==='text')element.attr('fill'  ,color);\n\t\t\tif(element.type==='text')element.attr('stroke','none');\n\t\t\tif(element.type==='path')element.attr('stroke',color);\n\t\t}\n\t})\n}\nfunction set_animation(group,timeline,elements) {\n\telements.forEach(function (element,j) {\n\t\tvar color = palette[j%palette.length];\n\t\tvar duration = 0.1;\n\t\tvar speed = 4;\n\t\ttimeline.add(get_animation_for_path_of_lines(group,element,color,duration,speed));\n\t})\n}\nfunction do_enter(argument) {\n\tvar scene = scenes[argument];\n\tdo_show(scene);\n\tvar timeline_config = {yoyo:true,repeat:1};\n\tvar timeline = new TimelineMax();\n\tscene.forEach(function (argument) {\n\t\tdo_show_element(argument);\n\t\ttimeline.add(TweenMax.from(argument.node,0.1,{scaleX:0,scaleY:0}))\n\t})\n\treturn timeline;\n}\nfunction do_animation_scene(scenes,group,i){\n\tvar parts_timeline = new TimelineMax();\n\t// console.log(\"i : \",i);\n\tvar scene = scenes[i];\n\t// console.log(\"scene : \",scene);\n\n\tscene.forEach(function (element,j) {\n\t\t// console.log(\"element : \",element);\n\t\tvar color = palette[j%palette.length];\n\t\tvar duration = 0.1;\n\t\tparts_timeline.add(get_animation_for_path_of_lines(group,element,color,duration));\n\t})\n\treturn parts_timeline;\n}\n",
			"file": "index.js",
			"file_size": 29834,
			"file_write_time": 131324441233302903,
			"settings":
			{
				"buffer_size": 28960,
				"line_ending": "Windows"
			}
		},
		{
			"file": "libs/svg-shapes.js",
			"settings":
			{
				"buffer_size": 15420,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "testing.svg",
			"settings":
			{
				"buffer_size": 2647,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/nwjs.sublime-build",
					""
				],
				[
					"Packages/User/nwjs_logging.sublime-build",
					""
				]
			],
			[
				"Packages/User/nwjs_logging.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 342.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cops",
				"File: Copy as Tag script"
			],
			[
				"binstall",
				"Bower: Install"
			],
			[
				"binsta",
				"Bower: Install"
			],
			[
				"b",
				"Bower: Install"
			],
			[
				"",
				"File: Copy Name"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"bis",
				"Bower: Install"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"binding",
				"Preferences: Key Bindings"
			],
			[
				"bindingd",
				"Preferences: Terminal Key Bindings – Default"
			],
			[
				"r",
				"Indentation: Reindent Lines"
			],
			[
				"copy",
				"File: Copy Path as URI"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"bower",
				"Bower: Discover packages"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"bins",
				"Bower: Install"
			],
			[
				"copynam",
				"File: Copy Name"
			],
			[
				"bi",
				"Bower: Install"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"copyas",
				"File: Copy as Tag script"
			],
			[
				"copys",
				"File: Copy as Tag style"
			],
			[
				"copyna",
				"File: Copy Name"
			],
			[
				"bindings",
				"Preferences: Key Bindings"
			],
			[
				"wrt",
				"Word Wrap: Toggle"
			],
			[
				"wrp",
				"Word Wrap: Toggle"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"new",
				"File: New File Relative to Current View"
			],
			[
				"move",
				"File: Move"
			],
			[
				"filena",
				"File: Copy Name"
			],
			[
				"copsa",
				"File: Copy as Tag script"
			],
			[
				"new fol",
				"File: New Folder Relative to Project Root"
			],
			[
				"reindent",
				"Indentation: Reindent Lines"
			],
			[
				"file cop",
				"File: Copy Name"
			],
			[
				"new folder",
				"File: New Folder Relative to Project Root"
			],
			[
				"copye",
				"File: Copy Name"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"new file",
				"File: New File Relative to Current View"
			],
			[
				"folder",
				"File: New Folder Relative to Project Root"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"cop",
				"File: Copy URL"
			],
			[
				"copnam",
				"File: Copy Name"
			],
			[
				"pack lis",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"opas",
				"File: Copy as Tag script"
			],
			[
				"copa",
				"File: Copy as Tag script"
			],
			[
				"de",
				"File: Delete"
			],
			[
				"npm",
				"npm: Install Package"
			],
			[
				"COPS",
				"File: Copy as Tag script"
			],
			[
				"nam",
				"File: Copy Name"
			],
			[
				"name",
				"File: Copy Name"
			],
			[
				"NAM",
				"File: Copy Name"
			],
			[
				"co",
				"File: Copy Name"
			],
			[
				"bo",
				"Bower: Install"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"copypath",
				"File: Copy Path"
			],
			[
				"copy pa",
				"File: Copy Path"
			],
			[
				"copna",
				"File: Copy Name"
			],
			[
				"copy nam",
				"File: Copy Name"
			],
			[
				"coops",
				"Indentation: Convert to Spaces"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"init",
				"Git: Init"
			],
			[
				"opy",
				"File: Copy Name"
			],
			[
				"ops",
				"File: Open In Browser - Production Server"
			],
			[
				"path",
				"File: Copy Path From Project"
			],
			[
				"renm",
				"File: Rename"
			],
			[
				"renma",
				"File: Rename"
			],
			[
				"rein\t",
				"Indentation: Reindent Lines"
			],
			[
				"copys\t",
				"File: Copy as Tag script"
			],
			[
				"bindi",
				"Preferences: Key Bindings - User"
			],
			[
				"copya",
				"File: Copy as Tag a"
			],
			[
				"find",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"bindin",
				"Preferences: Key Bindings - Default"
			],
			[
				"w",
				"Word Wrap: Toggle"
			],
			[
				"inde",
				"Indentation: Convert to Tabs"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"bin",
				"Preferences: Key Bindings - User"
			],
			[
				"bind",
				"Preferences: Key Bindings - User"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"WRAP",
				"Word Wrap: Toggle"
			],
			[
				"wr",
				"Word Wrap: Toggle"
			],
			[
				"bindinds",
				"Preferences: Key Bindings - Default"
			],
			[
				"copyscri",
				"File: Copy as Tag script"
			],
			[
				"copscrip",
				"File: Copy as Tag script"
			],
			[
				"reve",
				"File: Reveal"
			],
			[
				"indenta",
				"Indentation: Reindent Lines"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"log",
				"Git: Log All"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"reveal",
				"File: Reveal"
			],
			[
				"bisn",
				"Bower: Install"
			],
			[
				"bisntall",
				"Bower: Install"
			],
			[
				"binst",
				"Bower: Install"
			],
			[
				"filecop",
				"File: Copy Name"
			],
			[
				"filecopy",
				"File: Copy Name"
			],
			[
				"warp",
				"Word Wrap: Toggle"
			],
			[
				"ind",
				"Indentation: Convert to Tabs"
			],
			[
				"bisnta",
				"Bower: Install"
			],
			[
				"revel",
				"File: Reveal"
			],
			[
				"revea",
				"File: Reveal"
			],
			[
				"rap",
				"Word Wrap: Toggle"
			],
			[
				"draw",
				"Origami: Destroy Pane Below"
			],
			[
				"inden",
				"Indentation: Convert to Tabs"
			],
			[
				"snippet",
				"Snippet: javascript new class"
			],
			[
				"indn",
				"Indentation: Convert to Spaces"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"sea",
				"File: Search Files"
			],
			[
				"wrA",
				"Word Wrap: Toggle"
			],
			[
				"paen",
				"Package Control: Enable Package"
			],
			[
				"console",
				"Snippet: console.dir()"
			],
			[
				"binduser",
				"Preferences: Key Bindings - User"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"file",
				"File: Reveal"
			],
			[
				"proje",
				"Project: Edit"
			],
			[
				"project",
				"Project: Edit"
			],
			[
				"prefere",
				"Preferences: Settings - Default"
			],
			[
				"prefe",
				"Preferences: Settings - User"
			],
			[
				"side bar",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"keyb",
				"Preferences: Key Bindings - Default"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			]
		],
		"width": 510.0
	},
	"console":
	{
		"height": 328.0,
		"history":
		[
			"FindKeyConflicts alt",
			"FindKeyConflicts: alt",
			"FindKeyConflicts: All Key Maps to Quick Panel: alt",
			"FindKeyConflicts:",
			"FindKeyConflicts",
			"FindKeyConflicts: All Key Maps to Quick Panel:",
			"FindKeyConflicts: All Key Maps to Quick Panel",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"version",
			"version()",
			"cls()",
			"cls",
			"cla",
			"clear()",
			"exit",
			"clear()",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/alvaro/Dropbox/js/great_scott_555",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/underscore",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/data",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/data/svg",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/libs"
	],
	"file_history":
	[
		"/C/Users/alvaro/Dropbox/js/great_scott_555/Gruntfile.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/great scott 555.svg",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/svg-pan-zoom/dist/svg-pan-zoom.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/chroma-js/chroma.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/testing.svg",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/index.html",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/package.json",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/index.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/gsap/src/uncompressed/TweenMax.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/dat.gui/build/dat.gui.js",
		"/C/Users/alvaro/AppData/Roaming/inkscape/extension-errors.log",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/bower_components/underscore/underscore.js",
		"/C/Users/alvaro/Dropbox/js/great_scott_555/node_modules/snapsvg/dist/snap.svg.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/audio.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/components/gsap/src/uncompressed/TweenMax.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/libs/nanoKONTROL.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/Gruntfile.js",
		"/C/Users/alvaro/AppData/Roaming/Sublime Text 3/Packages/Terminal/Default (Windows).sublime-keymap",
		"/C/of_v0.9.8_vs_release/apps/examples_ofxLiquidFun/example-basic/example-basic.sln",
		"/C/Users/alvaro/Dropbox/js/lines/MeydaAudio.js",
		"/C/Users/alvaro/Dropbox/js/three.js/examples/webgl_trails.html",
		"/C/Users/alvaro/Dropbox/js/three.js/examples/webgl_depth_texture.html",
		"/C/Users/alvaro/Dropbox/js/three.js/examples/js/Octree.js",
		"/C/Users/alvaro/Dropbox/js/three.js/examples/textures/UV_Grid_Sm.txt",
		"/C/Users/alvaro/Dropbox/js/mrdoob/glsl-sandbox/glsl-sandbox/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/notlion/pst/pst/public/lib/bower_components/hammerjs/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/js/Grid.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/js/polyhedra.js",
		"/C/Users/alvaro/Dropbox/js/sandcastls/lib/math/geom.js",
		"/C/Users/alvaro/Dropbox/pdf/analog synth/bower_components/chance/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/recode/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/zigfu02/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/yeoman-webapp2/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/yeoman-webapp/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower.json",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/.bowerrc",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/clave administrador ninezyconocimiento.txt",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/lines-indexed.html",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/js/particle.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/meyda_gh_pages.html",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/lines.html",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/instanced.html",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/examples/js/controls/OrbitControls.js",
		"/C/Users/alvaro/Dropbox/js/three.js/docs/scenes/js/geometry.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/meyda/dist/web/meyda.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi/songs.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/three_voronoi.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/js/Vector2.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/chroma-js/chroma.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/build/three.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/main.js",
		"/C/Users/alvaro/Dropbox/js/three.js/docs/scenes/geometry-browser.html",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/dat-gui/build/dat.gui.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/examples/js/libs/stats.min.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/examples/js/Detector.js",
		"/C/Users/alvaro/Dropbox/js/meyda2016/meyda/main.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/webgl_geometry_shapes.html",
		"/C/Users/alvaro/Dropbox/js/voronoi/bower.json",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/examples/js/math/Lut.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/bower_components/three/examples/js/controls/TrackballControls.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/js/rhill-voronoi-core.js",
		"/C/Users/alvaro/Dropbox/js/three_voronoi/three_voronoi.sublime-project",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/geometry/Grid.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/geometry/grid.utils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/instructions.txt",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/styles.css",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/flow_field.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/voronoi-rhill.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/intersected.grid.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/puntos.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client3.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/kd_tree.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/task.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/background.theory.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/qlib/geom/LineSegment.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/flow_field.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/voronoi.performance.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/mathjax_example/mathjax.example.svg.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/rhill-voronoi-core.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/kd_tree.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid.menu.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client2.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/qlib/geom/Vector2.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/data/audio/mainTheme_segment.ogg",
		"/C/Users/alvaro/Dropbox/js/quasimondo/QuasimondoLibsJS/demos/UbiLabsKDTree.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/vertices_unification.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/vertices.unification.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/box2d-voronoi.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client2.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/particle.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/box2d-voronoi.2.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_client3.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/qlib/geom/KDTree.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_broken_into_voronoi.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_broken_into_voronoi2.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi/GridUtils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/GridDrawing.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/seriously/seriously_utils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/intersected.grid.2.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/intersected.grid.3.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/ui/grid.drawing.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid_broken_into_voronoi2.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid.drawing.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/snap.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/QuasimondoStar.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid.utils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/libraries.json",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/image.grid.voronoi.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/tests/grid_utils_client.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/verices.unification.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/grid.menu2.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/geometry/voronoi.utils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/snap.menu.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/tests/grid_utils_client.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/voronoi.shape.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/snap_utils.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/tests/voronoi_utils_tests.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/qlib/geom/Polygon.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/htmls_tagged.json",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/quasimondo-for-tesellations.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/QuasimondoStar_client.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/QuasimondoStar_client.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/Grid.js",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/sandcastls/geometry/grid.md",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/voronoi-rhill/toxic.grid.html",
		"/C/Users/alvaro/Dropbox/js/jsdo.it/libs/qlib/geom/GeometricShape.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 92.0,
		"where_history":
		[
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"<project>",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-place*.js,-geometryutil.js,-.\\docs\\**.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-place*.js,-geometryutil.js,-docs\\**.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-place*.js,-geometryutil.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-*.htm*,-place*.js,-geometryutil.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-*.htm*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg,-*.htm*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js,-*.svg",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js,-clipper,js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan,-*three*.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\libs\\svgnest",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\wearie_phelan",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\beziercurve",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\beziercurve",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\libs\\qlib\\geom",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\clipper, -clipper.js, -raphael-min.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\clipper, -clipper.js, -raphael-min.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\clipper, -clipper.js",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\clipper",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\codevember02",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\libs\\sandcastls",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\libs\\sandcastls",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\rayTracing",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\raytracing_take2",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\musicElementsPlumbbed",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\musicElementContext",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\musicElementsPlumbbed",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\musicTheory",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\paintflow2",
			"<project>",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\bird_boid",
			"<project>,-components/**/*.*,-node_modules/**/*.*,-*.min.js, -libs/*.*",
			"<project>,-components/**/.*,-node_modules/**/.*,-*.min.js, -libs/*.*",
			"<project>,-components/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\Abstriangulation",
			"<project>,-components/*.*,-*.min.js, -libs/*.*",
			"C:\\Users\\Usuario\\Dropbox\\js\\jsdo.it\\libs\\qlib",
			"<project>,-components/*.*,-*.min.js, -libs/*.*",
			"<project>,-components/*.*,-*.min.js",
			"C:\\Users\\Usuario\\Dropbox\\js\\jsdo.it\\spray",
			"<project>,-components/*.*,-*.min.js",
			"<project>",
			"<project>,-components/*.*,-*.min.js",
			"<project>,-components/*.*",
			"<project>",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\rayTracing",
			"<project>",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\rayTracing",
			"<project>",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\rayTracing",
			"<project>",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\rayTracing",
			"<project>",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\drawrectWithAlpha",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it",
			"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\drawrectWithAlpha",
			"<project>",
			"<project>,-*.js, -*.txt",
			"<project>,-*.js",
			"<project>",
			"<project>,-*.js",
			"<project>,-*.txt",
			"<project>,-*.css",
			"<project>,-*.txt",
			"<project>",
			"C:\\httpserver\\www\\nyc\\wp-content\\themes\\",
			"C:\\httpserver\\www\\nyc\\wp-content\\themes\\minimatica_sc",
			"<project>",
			"C:\\httpserver\\www\\nyc\\wp-admin",
			"<project>",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts\\canvas",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts\\cnavas",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\styles\\sass",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts\\canvas\\",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts",
			"C:\\Users\\Alvaro\\Downloads\\Box2dWeb-2.1a.3",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app\\scripts\\canvas",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app",
			"C:\\Users\\Alvaro\\Downloads\\Box2dWeb-2.1a.3",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\app",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos",
			"<project>",
			"C:\\Users\\Alvaro\\Documents\\GitHub\\matematicaparaninos\\build\\js",
			"C:\\Users\\Alvaro\\Downloads\\Box2dWeb-2.1a.3",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"do_show",
			"do_animation_scene",
			"do_enter",
			"do_animation_scene",
			"_buses",
			"do_enter",
			"scenes",
			"scenes_buses",
			"group_lines",
			"x",
			"1",
			"get_animation_for_path_of_lines",
			"elem",
			"argument",
			"add_timeline_gui",
			"set_timeline_NOT_USED",
			"set_animation",
			"get_animation_for_path_of_lines",
			"do_animation_scene",
			"set_timeline",
			"timeline_max",
			"timeline_all",
			"do_animation_scene",
			"group_lines",
			"do_animation_scene",
			"do_animation",
			"set_animation",
			"do_animation",
			"group_lines",
			",",
			"get_animation_for_path_of_lines",
			"do_hide_all",
			"set_animation",
			"do_animation",
			"scene",
			"scenes",
			"set_animation",
			"draw_color",
			"time",
			"get_animation_for_path_of_lines",
			"new_group",
			"get_animation_for_path_of_lines",
			"set_animation",
			"new_group",
			"get_animation_for_path_of_lines",
			"element",
			"get_animation_for_path_of_lines",
			"group_lines",
			"get_animation_for_path_of_lines",
			"set_animation",
			"toggle_image",
			"folder_all",
			"argument",
			"vectors_layer",
			"set_animation",
			"imeline",
			"set_animation",
			"parts_timeline",
			"set_animation",
			"parts_timeline",
			"vectors_array",
			"draw_color",
			"try",
			"is_image",
			"draw_color",
			"vectors_array",
			"draw_color",
			"pan_zoom_main",
			"monostable_snap",
			"argument",
			"t",
			"argument",
			"(element.node,",
			"TweenMax.to(element.node",
			"element_clone",
			"timeline",
			"do_enter",
			"decomposeMatrix",
			"tween",
			"element_clone",
			"label_clone",
			"do_clone_text_element",
			"clone_text_element",
			"label",
			"clone_label",
			"r1_label_clone",
			"var_name",
			"clone",
			"do_hide_all",
			"do_visibility",
			"do_hide_all",
			"display",
			"start_animation_NOT_USED",
			"set_timeline",
			"do_animation",
			"parts_timeline",
			"timeline_max",
			"get_animation_for_path_of_lines",
			"palette",
			"get_animation_for_path_of_lines",
			"group",
			"get_animation_for_path_of_lines",
			"red",
			"draw_color",
			"stroke",
			"r1_label",
			"green",
			"draw_color",
			"'white'",
			"draw_with_white",
			"pan_zoom_main",
			"var_name",
			"get_animation_for_pathof_lines",
			"transform=\"translate",
			"transform=\"translate(0,-400)\"",
			"transistor",
			"parts_timeline",
			"get_animation_for_path",
			"TimelineMax",
			"this.target",
			"parts_timeline",
			"decomposed_global_matrix",
			"totalMatrix",
			"transform",
			"group",
			"drag",
			"id",
			"px"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"duration",
			"group_lines",
			"voronoi_mesh",
			"meyda_audio",
			"global_geometry",
			"meyda_audio",
			"all_points_repeated",
			"search",
			"_controller",
			"current_selected_html",
			"scriptNode",
			"app.selected_child",
			"analysed_poyhedronnnn",
			"face_with_most_vertices",
			"csg_source_group",
			"faces_client_lib.get_colored_faces_mesh",
			"faces_client_lib.get_colored_faces",
			"palette_length",
			"THREE",
			"canvas1Ctx",
			"do_add_neighbours",
			"scenes",
			"scene",
			"clear(ctx)",
			"app.body",
			"svg_utils.update_enlarged_SVG",
			"appendChild",
			"polygon_data",
			"PenRender",
			"pen",
			"update_ccapture",
			"sort_obj",
			"$C$",
			"radius_path",
			"$A$",
			"$C$",
			"last",
			"r",
			"filter_low",
			"unit_dimension",
			"scene_id",
			"anchor0x",
			"arm1_length",
			"anchor0.y",
			"anchor0.x",
			"(),\n",
			"SIGNALS",
			"myjoint"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 816,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								245
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 262,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Seti_UI/icons/Langs/npm JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28960,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								7782,
								7782
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2691.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libs/svg-shapes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15420,
						"regions":
						{
						},
						"selection":
						[
							[
								4524,
								4524
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 78.0,
						"translation.y": 1609.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "testing.svg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2647,
						"regions":
						{
						},
						"selection":
						[
							[
								818,
								818
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 341.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-init":
	{
		"height": 86.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"output.textarea":
	{
		"height": 155.0
	},
	"pinned_build_system": "Packages/User/nwjs_logging3.sublime-build",
	"project": "great scott 555.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"grun",
				"Gruntfile.js"
			],
			[
				"svgpan",
				"bower_components\\svg-pan-zoom\\dist\\svg-pan-zoom.js"
			],
			[
				"chroma",
				"bower_components\\chroma-js\\chroma.js"
			],
			[
				"svg",
				"libs\\svg-shapes.js"
			],
			[
				"tweenma",
				"bower_components\\gsap\\src\\uncompressed\\TweenMax.js"
			],
			[
				"dat",
				"bower_components\\dat.gui\\build\\dat.gui.js"
			],
			[
				"under",
				"bower_components\\underscore\\underscore.js"
			],
			[
				"snap",
				"node_modules\\snapsvg\\dist\\snap.svg.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"particle",
				"three_voronoi\\js\\particle.js"
			],
			[
				"tween",
				"three_voronoi\\components\\gsap\\src\\uncompressed\\TweenMax.js"
			],
			[
				"audio",
				"three_voronoi\\audio.js"
			],
			[
				"midi",
				"three_voronoi\\js\\midi_utils.js"
			],
			[
				"grunt",
				"three_voronoi\\Gruntfile.js"
			],
			[
				"three_voronoi_particle",
				"three_voronoi\\three_voronoi_particle.html"
			],
			[
				"octree",
				"examples\\js\\Octree.js"
			],
			[
				"depth",
				"examples\\webgl_depth_texture.html"
			],
			[
				"trails",
				"examples\\webgl_trails.html"
			],
			[
				"",
				"three_voronoi_particle.js"
			],
			[
				"grid",
				"js\\Grid.js"
			],
			[
				"trackballcontrols",
				"bower_components\\three\\examples\\js\\controls\\TrackballControls.js"
			],
			[
				"vect",
				"js\\Vector2.js"
			],
			[
				"audi",
				"audio.js"
			],
			[
				"meyda",
				"bower_components\\meyda\\dist\\web\\meyda.js"
			],
			[
				"core",
				"js\\rhill-voronoi-core.js"
			],
			[
				"mai",
				"main.js"
			],
			[
				"orbit",
				"bower_components\\three\\examples\\js\\controls\\OrbitControls.js"
			],
			[
				"dat.gui",
				"bower_components\\dat-gui\\build\\dat.gui.js"
			],
			[
				"gruntfil",
				"Gruntfile.js"
			],
			[
				"stats",
				"bower_components\\three\\examples\\js\\libs\\stats.min.js"
			],
			[
				"detector",
				"bower_components\\three\\examples\\js\\Detector.js"
			],
			[
				"stat",
				"bower_components\\three\\examples\\js\\libs\\stats.min.js"
			],
			[
				"track",
				"bower_components\\three\\examples\\js\\controls\\TrackballControls.js"
			],
			[
				"three",
				"bower_components\\three\\build\\three.js"
			],
			[
				"gridutils",
				"geometry\\grid.utils.js"
			],
			[
				"flow_filed",
				"voronoi-rhill\\flow_field.js"
			],
			[
				"rhil",
				"voronoi-rhill\\voronoi-rhill.html"
			],
			[
				"flowfield",
				"voronoi-rhill\\flow_field.js"
			],
			[
				"sty",
				"voronoi-rhill\\styles.css"
			],
			[
				"instruc",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"songsjs",
				"voronoi\\songs.js"
			],
			[
				"o",
				"voronoi\\songs.js"
			],
			[
				"songs",
				"voronoi\\songs.js"
			],
			[
				"styles",
				"voronoi-rhill\\styles.css"
			],
			[
				"gridc",
				"voronoi-rhill\\grid_client2.js"
			],
			[
				"menu",
				"voronoi-rhill\\grid.menu.html"
			],
			[
				"instructions",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"linesegment",
				"qlib\\geom\\LineSegment.js"
			],
			[
				"son",
				"voronoi\\songs.js"
			],
			[
				"segme",
				"qlib\\geom\\LineSegment.js"
			],
			[
				"sege",
				"audio\\mainTheme_segment.ogg"
			],
			[
				"vector",
				"qlib\\geom\\Vector2.js"
			],
			[
				"ongs",
				"voronoi\\songs.js"
			],
			[
				"kdtree",
				"voronoi-rhill\\kd_tree.js"
			],
			[
				"linese",
				"qlib\\geom\\LineSegment.js"
			],
			[
				"flowfi",
				"voronoi-rhill\\flow_field.html"
			],
			[
				"instructios",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"tyles",
				"voronoi-rhill\\styles.css"
			],
			[
				"vert",
				"voronoi-rhill\\vertices_unification.html"
			],
			[
				"vertices",
				"voronoi-rhill\\vertices.unification.js"
			],
			[
				"flow_field",
				"voronoi-rhill\\flow_field.js"
			],
			[
				"gridclient",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"style",
				"voronoi-rhill\\styles.css"
			],
			[
				"ins",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"vetor",
				"qlib\\geom\\Vector2.js"
			],
			[
				"vecto",
				"qlib\\geom\\Vector2.js"
			],
			[
				"flowhtml",
				"voronoi-rhill\\flow_field.html"
			],
			[
				"vector2.js",
				"qlib\\geom\\Vector2.js"
			],
			[
				"parti",
				"voronoi-rhill\\particle.js"
			],
			[
				"grid.utils",
				"geometry\\grid.utils.js"
			],
			[
				"griutils",
				"voronoi\\GridUtils.js"
			],
			[
				"griddrawing.js",
				"voronoi-rhill\\GridDrawing.js"
			],
			[
				"griddrawing",
				"voronoi-rhill\\GridDrawing.js"
			],
			[
				"gc2js",
				"voronoi-rhill\\grid_client2.js"
			],
			[
				"gc3ht",
				"voronoi-rhill\\grid_client3.html"
			],
			[
				"grid.utils.js",
				"geometry\\grid.utils.js"
			],
			[
				"grid_client3",
				"voronoi-rhill\\grid_client3.js"
			],
			[
				"quasimondo",
				"voronoi-rhill\\QuasimondoStar.js"
			],
			[
				"snap.",
				"voronoi-rhill\\snap.html"
			],
			[
				"serio",
				"seriously\\seriously_utils.js"
			],
			[
				"song",
				"voronoi\\songs.js"
			],
			[
				"gridclient2",
				"voronoi-rhill\\grid_client2.html"
			],
			[
				"gridcl2",
				"voronoi-rhill\\grid_client2.js"
			],
			[
				"songs.js",
				"voronoi\\songs.js"
			],
			[
				"grdclient2",
				"voronoi-rhill\\grid_client2.js"
			],
			[
				"gridclientjs",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"punto",
				"voronoi-rhill\\puntos.html"
			],
			[
				"griclient",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"gridl",
				"voronoi-rhill\\grid_client.html"
			],
			[
				"puntos",
				"voronoi-rhill\\puntos.html"
			],
			[
				"instructio",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"gridclien",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"snap_utils",
				"voronoi-rhill\\snap_utils.js"
			],
			[
				"voronoiutilstes",
				"voronoi-rhill\\tests\\voronoi_utils_tests.js"
			],
			[
				"grdid",
				"voronoi-rhill\\GridDrawing.js"
			],
			[
				"syle",
				"voronoi-rhill\\styles.css"
			],
			[
				"instru",
				"voronoi-rhill\\instructions.txt"
			],
			[
				"gridjs",
				"voronoi-rhill\\Grid.js"
			],
			[
				"gridclie",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"gridmen",
				"voronoi-rhill\\grid.menu.html"
			],
			[
				"griddra",
				"voronoi-rhill\\grid.drawing.js"
			],
			[
				"draw",
				"voronoi-rhill\\GridDrawing.js"
			],
			[
				"gridcli2",
				"voronoi-rhill\\grid_client2.js"
			],
			[
				"grid.js",
				"voronoi-rhill\\Grid.js"
			],
			[
				"image.grid.voronoi.html",
				"voronoi-rhill\\image.grid.voronoi.html"
			],
			[
				"geometricshape",
				"qlib\\geom\\GeometricShape.js"
			],
			[
				"polygon",
				"qlib\\geom\\Polygon.js"
			],
			[
				"styles.css",
				"voronoi-rhill\\styles.css"
			],
			[
				"qua",
				"voronoi-rhill\\quasimondo-for-tesellations.js"
			],
			[
				"polyg",
				"qlib\\geom\\Polygon.js"
			],
			[
				"mixed",
				"qlib\\geom\\MixedPath.js"
			],
			[
				"griduti",
				"voronoi-rhill\\grid.utils.js"
			],
			[
				"po",
				"qlib\\geom\\Polygon.js"
			],
			[
				"stye",
				"voronoi-rhill\\styles.css"
			],
			[
				"grid_client",
				"voronoi-rhill\\grid_client.js"
			],
			[
				"sna",
				"voronoi-rhill\\snap.html"
			],
			[
				"nwjs",
				"voronoi-rhill\\nw.js"
			],
			[
				"grid_clie",
				"voronoi-rhill\\grid_client.html"
			],
			[
				"snap.menu",
				"voronoi-rhill\\snap.menu.html"
			],
			[
				"styl",
				"voronoi-rhill\\styles.css"
			],
			[
				"poly",
				"voronoi-rhill\\polyclip.clent.html"
			],
			[
				"intersected.grid.html",
				"voronoi-rhill\\intersected.grid.html"
			],
			[
				"nwhtml",
				"voronoi-rhill\\nw.html"
			],
			[
				"index.js",
				"voronoi-rhill\\index.js"
			],
			[
				"index",
				"voronoi-rhill\\index.html"
			],
			[
				"polyclip.clent",
				"voronoi-rhill\\polyclip.clent.html"
			],
			[
				"box2d-hardcoded",
				"voronoi-rhill\\box2d-hardcoded.html"
			],
			[
				"nwht",
				"voronoi-rhill\\nw.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "r",
		"selected_items":
		[
			[
				"r",
				"C:\\Users\\alvaro\\Dropbox\\js\\jsdo.it\\voronoi-rhill\\voronoi-rhill.sublime-project"
			],
			[
				"",
				"C:\\Users\\alvaro\\Dropbox\\js\\chromeexperiments\\brushcode\\brushcode.sublime_project.sublime-project"
			],
			[
				"mpn",
				"C:\\Users\\alvaro\\Documents\\matematicaparaninos\\mpn.sublime-project"
			],
			[
				"MPN",
				"C:\\Users\\alvaro\\Documents\\matematicaparaninos\\mpn.sublime-project"
			],
			[
				"mp",
				"C:\\Users\\alvaro\\Documents\\matematicaparaninos\\mpn.sublime-project"
			],
			[
				"gl",
				"C:\\Users\\alvaro\\Dropbox\\js\\glsl-sandbox\\glsl-sandbox.sublime-project"
			],
			[
				"com",
				"C:\\Users\\alvaro\\Dropbox\\js\\socket.io.template.interface\\comtact.sublime-project"
			],
			[
				"a",
				"C:\\Users\\alvaro\\Documents\\js\\animated_sort_sonorization\\animated_sort_sonorization.sublime-project"
			],
			[
				"js",
				"C:\\Users\\Usuario\\Dropbox\\js\\jsdomjsdoit\\jsdomjsdoit_project.sublime-project"
			],
			[
				"q",
				"C:\\Users\\Usuario\\Dropbox\\js\\quasimondo\\quasimondo.sublime-project"
			],
			[
				"sndpe",
				"C:\\Users\\Usuario\\Dropbox\\js\\sndpeek\\sndpeek-project.sublime-project"
			],
			[
				"gibber.lib",
				"C:\\Users\\Usuario\\Dropbox\\js\\charlieroberts\\gibber.lib\\gibber.sublime-project"
			],
			[
				"jsdo",
				"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\jsdoit.sublime-project"
			],
			[
				"fra",
				"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\frameClient\\frameClient.sublime-project"
			],
			[
				"frame",
				"C:\\Users\\equipo\\Documents\\Dropbox\\js\\jsdo.it\\frameClient\\frameClient.sublime-project"
			],
			[
				"eb",
				"/C/Documents and Settings/alvaro/My Documents/My Dropbox/js/ebinPaulosep/ebinPaulosep.sublime-project"
			],
			[
				"eblin",
				"/C/Documents and Settings/alvaro/My Documents/My Dropbox/js/ebinPaulosep/ebinPaulosep.sublime-project"
			],
			[
				"yeom",
				"/C/Documents and Settings/alvaro/My Documents/My Dropbox/js/yeoman-webapp/yeoman-webapp.sublime-project"
			],
			[
				"ease",
				"/C/Documents and Settings/alvaro/My Documents/My Dropbox/js/EaselJS/easel.sublime-project"
			],
			[
				"waa",
				"/C/Documents and Settings/alvaro/My Documents/My Dropbox/js/WAAX/waax.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 342.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"get_colored_faces_mesh",
				".get_colored_faces_mesh = function(geometry_,colors,is_color_depend_on_side)"
			]
		],
		"width": 766.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
